{"version":3,"sources":["images/val-log.png","components/Header.js","components/Card.js","images/astra.jpeg","images/brimstone.jpeg","images/cypher.jpeg","images/jett.jpeg","images/killjoy.jpeg","images/omen.jpeg","images/phoenix.jpeg","images/raze.jpeg","images/reyna.jpeg","images/sage.jpeg","images/skype.jpeg","images/sova.jpeg","components/CardGrid.js","images/viper.jpeg","images/yoru.jpeg","App.js","index.js"],"names":["Header","props","id","score","bestScore","Card","useState","wasClicked","setWasClicked","useEffect","reset","className","onClick","endCurrentStage","incrementScore","randomizeCards","src","image","alt","name","CardGrid","cards","Astra","Brimstone","Cypher","Jett","KillJoy","Omen","Phoenix","Raze","Reyna","Sage","Skye","Sova","map","value","index","positions","setPositions","array","shuffledArray","slice","i","length","j","Math","floor","random","shuffleArray","position","App","setScore","setBestScore","setReset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAAe,I,WCsBAA,EAjBA,SAACC,GACZ,OACI,sBAAKC,GAAG,SAAR,UACI,qBAAKA,GAAG,eAAR,SACI,mDAEJ,yEACA,2CAAcD,EAAME,MAApB,gBAAwCF,EAAMG,iBC2B3CC,G,MAnCF,SAACJ,GACV,MAAsCK,oBAAS,GAA/C,mBAAQC,EAAR,KAAoBC,EAApB,KAkBA,OANAC,qBAAU,WACFR,EAAMS,OACNF,GAAc,KAEnB,CAACP,EAAMS,QAGN,qBAAKC,UAAU,OAAyBC,QAjBxB,WAChBJ,GAAeD,GACXA,EACAN,EAAMY,kBAENZ,EAAMa,iBAEVb,EAAMc,kBAUN,SACI,qBAAKC,IAAKf,EAAMgB,MAAOC,IAAKjB,EAAMkB,QADXlB,EAAMgB,SCxB1B,MAA0B,mCCA1B,MAA0B,uCCA1B,MAA0B,oCCA1B,MAA0B,kCCA1B,MAA0B,qCCA1B,MAA0B,kCCA1B,MAA0B,qCCA1B,MAA0B,kCCA1B,MAA0B,mCCA1B,MAA0B,kCCA1B,MAA0B,mCCA1B,MAA0B,kCCkF1BG,GClFA,ICAA,I,MFmBE,SAACnB,GACd,IAAMoB,EAAQ,CACX,CAACJ,MAAOK,EAAOH,KAAM,SACrB,CAACF,MAAOM,EAAWJ,KAAM,aACzB,CAACF,MAAOO,EAAQL,KAAM,UACtB,CAACF,MAAOQ,EAAMN,KAAM,QACpB,CAACF,MAAOS,EAASP,KAAM,WACvB,CAACF,MAAOU,EAAMR,KAAM,QACpB,CAACF,MAAOW,EAAST,KAAM,WACvB,CAACF,MAAOY,EAAMV,KAAM,QACpB,CAACF,MAAOa,EAAOX,KAAM,SACrB,CAACF,MAAOc,EAAMZ,KAAM,QACpB,CAACF,MAAOe,EAAMb,KAAM,QACpB,CAACF,MAAOgB,EAAMd,KAAM,SAKvB,EAAkCb,mBAC9Be,EAAMa,KAAI,SAACC,EAAOC,GAAR,OAAkBA,MADhC,mBAAOC,EAAP,KAAkBC,EAAlB,KAgBMvB,EAAiB,WACnBuB,EAbiB,SAACC,GAElB,IADA,IAAIC,EAAgBD,EAAME,MAAM,GACvBC,EAAI,EAAGA,EAAIF,EAAcG,OAAQD,IAAK,CAC3C,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,SAAWP,EAAcG,QADR,EAEJ,CACnCH,EAAcI,GACdJ,EAAcE,IAFjBF,EAAcE,GAF4B,KAExBF,EAAcI,GAFU,KAO/C,OAAOJ,EAIMQ,CAAaX,KAG9B,OACI,qBAAKnC,GAAG,YAAR,SACKmC,EAAUH,KAAI,SAACe,GACZ,OACI,cAAC,EAAD,CAEIhC,MAAOI,EAAM4B,GAAUhC,MACvBE,KAAME,EAAM4B,GAAU9B,KACtBT,MAAOT,EAAMS,MACbG,gBAAiBZ,EAAMY,gBACvBC,eAAgBb,EAAMa,eACtBC,eAAgBA,GANXM,EAAM4B,GAAU9B,aG/B9B+B,G,MA1BH,WACV,MAA0B5C,mBAAS,GAAnC,mBAAOH,EAAP,KAAcgD,EAAd,KACA,EAAkC7C,mBAAS,GAA3C,mBAAOF,EAAP,KAAkBgD,EAAlB,KACA,EAA0B9C,oBAAS,GAAnC,mBAAOI,EAAP,KAAc2C,EAAd,KAeA,OACE,sBAAK1C,UAAU,MAAf,UACI,cAAC,EAAD,CAAQR,MAAOA,EAAOC,UAAWA,IACjC,cAAC,EAAD,CAAUM,MAAOA,EAAOG,gBAhBN,WAClBV,EAAQC,GACVgD,EAAajD,GAEfgD,EAAS,GACTE,GAAS,IAWqDvC,eARzC,WACrBqC,GAAS,kBAAMhD,EAAQ,KACvBkD,GAAS,WChBbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9201ae8b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/val-log.155584f8.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ValLogo from '../images/val-log.png';\nimport './Header.css'\n\nconst Header = (props) => {\n    return (\n        <div id=\"header\">\n            <div id=\"header-title\">\n                <h1>Valorant Memory</h1>\n            </div>\n            <p>Get points by clicking on an image once!</p>\n            <span>Score: {props.score} Best Score: {props.bestScore}</span>\n        </div>\n    );\n};\n\nHeader.propTypes = {\n    score: PropTypes.number,\n    bestScore: PropTypes.number,\n};\n\nexport default Header;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './Card.css';\n\nconst Card = (props) => {\n    const [ wasClicked, setWasClicked ] = useState(false);\n\n    const handleClick = () => {\n        setWasClicked(!wasClicked);\n        if (wasClicked) {\n            props.endCurrentStage();\n        } else {\n            props.incrementScore();\n        }\n        props.randomizeCards();\n    };\n\n    useEffect(() => {\n        if (props.reset) {\n            setWasClicked(false);\n        }\n    }, [props.reset]);\n\n    return (\n        <div className=\"card\" key={props.image} onClick={handleClick}>\n            <img src={props.image} alt={props.name}></img>\n        </div>\n    )\n};\n\nCard.propTypes = {\n    image: PropTypes.string,\n    name: PropTypes.string,\n    reset: PropTypes.bool,\n    endCurrentStage: PropTypes.func,\n    incrementScore: PropTypes.func,\n    randomizedCards: PropTypes.func,\n};\n\nexport default Card; ","export default __webpack_public_path__ + \"static/media/astra.48e16b9b.jpeg\";","export default __webpack_public_path__ + \"static/media/brimstone.f341d571.jpeg\";","export default __webpack_public_path__ + \"static/media/cypher.1c48ac97.jpeg\";","export default __webpack_public_path__ + \"static/media/jett.45c24715.jpeg\";","export default __webpack_public_path__ + \"static/media/killjoy.f89a1727.jpeg\";","export default __webpack_public_path__ + \"static/media/omen.8364cd7f.jpeg\";","export default __webpack_public_path__ + \"static/media/phoenix.9cf21321.jpeg\";","export default __webpack_public_path__ + \"static/media/raze.08be7b16.jpeg\";","export default __webpack_public_path__ + \"static/media/reyna.76b39933.jpeg\";","export default __webpack_public_path__ + \"static/media/sage.7d6a92ca.jpeg\";","export default __webpack_public_path__ + \"static/media/skype.1ffcd692.jpeg\";","export default __webpack_public_path__ + \"static/media/sova.ab632550.jpeg\";","import React, { useState } from \"react\";\nimport Card from './Card';\nimport PropTypes from 'prop-types';\nimport Astra from '../images/astra.jpeg';\nimport Brimstone from '../images/brimstone.jpeg';\nimport Cypher from '../images/cypher.jpeg';\nimport Jett from '../images/jett.jpeg';\nimport KillJoy from '../images/killjoy.jpeg';\nimport Omen from '../images/omen.jpeg';\nimport Phoenix from '../images/phoenix.jpeg';\nimport Raze from '../images/raze.jpeg';\nimport Reyna from '../images/reyna.jpeg';\nimport Sage from '../images/sage.jpeg';\nimport Skye from '../images/skype.jpeg';\nimport Sova from '../images/sova.jpeg';\nimport Viper from '../images/viper.jpeg';\nimport Yoru from '../images/yoru.jpeg';\nimport './CardGrid.css';\n\nconst CardGrid = (props) => {\n    const cards = [\n       {image: Astra, name: 'Astra'},\n       {image: Brimstone, name: 'Brimstone'},\n       {image: Cypher, name: 'Cypher'},\n       {image: Jett, name: 'Jett'},\n       {image: KillJoy, name: 'KillJoy'},\n       {image: Omen, name: 'Omen'},\n       {image: Phoenix, name: 'Phoenix'},\n       {image: Raze, name: 'Raze'},\n       {image: Reyna, name: 'Reyna'},\n       {image: Sage, name: 'Sage'},\n       {image: Skye, name: 'Skye'},\n       {image: Sova, name: 'Sova'},\n    //    {image: Viper, name: 'Viper'},\n    //    {image: Yoru, name: 'Yoru'},\n    ];\n\n    const [positions, setPositions] = useState(\n        cards.map((value, index) => index)\n    );\n\n    const shuffleArray = (array) => {\n        let shuffledArray = array.slice(0);\n        for (let i = 0; i < shuffledArray.length; i++) {\n            const j = Math.floor(Math.random() * shuffledArray.length);\n            [shuffledArray[i], shuffledArray[j]] = [\n                shuffledArray[j],\n                shuffledArray[i],\n            ];\n        }\n        return shuffledArray;\n    }\n\n    const randomizeCards = () => {\n        setPositions(shuffleArray(positions));\n    };\n\n    return (\n        <div id=\"card-grid\">\n            {positions.map((position) => {\n                return (\n                    <Card \n                        key={cards[position].name}\n                        image={cards[position].image}\n                        name={cards[position].name}\n                        reset={props.reset}\n                        endCurrentStage={props.endCurrentStage}\n                        incrementScore={props.incrementScore}\n                        randomizeCards={randomizeCards}\n                    />\n                );\n            })}\n        </div>\n    );\n};\n\nCardGrid.propTypes = {\n    reset: PropTypes.bool,\n    endCurrentStage: PropTypes.func,\n    incrementScore: PropTypes.func,\n};\n\nexport default CardGrid;","export default __webpack_public_path__ + \"static/media/viper.6104e5e1.jpeg\";","export default __webpack_public_path__ + \"static/media/yoru.be417d7c.jpeg\";","import React, { useState } from \"react\";\nimport Header from './components/Header';\nimport CardGrid from './components/CardGrid';\nimport './App.css';\n\nconst App = () => {\n  const [score, setScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n  const [reset, setReset] = useState(true);\n\n  const endCurrentStage = () => {\n    if (score > bestScore) {\n      setBestScore(score);\n    }\n    setScore(0);\n    setReset(true);\n  };\n\n  const incrementScore = () => {\n    setScore(() => score + 1);\n    setReset(false);\n  };\n\n  return (\n    <div className=\"App\">\n        <Header score={score} bestScore={bestScore} />\n        <CardGrid reset={reset} endCurrentStage={endCurrentStage} incrementScore={incrementScore} />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}